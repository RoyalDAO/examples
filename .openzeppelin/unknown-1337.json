{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "txHash": "0x9e7844db3923b86bd823e458daec5242a6a28498df6b4bb9fead5aceea7c4763"
  },
  "proxies": [
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x5fa297de63d19632b1c43055aa0076a2e331866e2f14a133bac19af455001a30",
      "kind": "transparent"
    },
    {
      "address": "0x9E545E3C0baAB3E08CdfD552C960A1050f373042",
      "txHash": "0xa41bc0c36538ec6f0cf947a118bc430ebec924787612574153f2e8e6bcf3e58e",
      "kind": "transparent"
    },
    {
      "address": "0x851356ae760d987E095750cCeb3bC6014560891C",
      "txHash": "0x8a80e4582bb36a5b0e0096306ce392254aecd36759e469840278af542058ec2f",
      "kind": "transparent"
    },
    {
      "address": "0xa82fF9aFd8f496c3d6ac40E2a0F282E47488CFc9",
      "txHash": "0x93749071bd2d7796906b1b1bf4f73d7451be849b0ad4b1586b447a7074d8dd3b",
      "kind": "transparent"
    },
    {
      "address": "0x1613beB3B2C4f22Ee086B2b38C1476A3cE7f78E8",
      "txHash": "0xd02c08cdd24cdd71917919253cad6be3e1c0dcbf0960c0960b731c9f844d5d89",
      "kind": "transparent"
    },
    {
      "address": "0xf5059a5D33d5853360D16C683c16e67980206f36",
      "txHash": "0xf6969d84d7c000e303250d6181da57a5b673d129ca0b151d934a1c348fc32b80",
      "kind": "transparent"
    },
    {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0x126f8b9aff42a78179d3c30cb911a81d255a44e27ad2eac5e4820bb6af26938d",
      "kind": "transparent"
    },
    {
      "address": "0x8f86403A4DE0BB5791fa46B8e795C547942fE4Cf",
      "txHash": "0x6ab34472ddad195d08049244249c58f22022bf8c195800ad68096ff79688ec31",
      "kind": "transparent"
    },
    {
      "address": "0x36C02dA8a0983159322a80FFE9F24b1acfF8B570",
      "txHash": "0xb8ebc2f29fcb4c9bda584eb9beb500435454349474cb851b268f5900967a48fc",
      "kind": "transparent"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x7f851094678115b844b5b277a5e338c3c89389c739a548f9594e64f8ec5e7285",
      "kind": "transparent"
    },
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x2ee4e77b175f5cfd6da48a0469e234aa02e4f963a1b6e55b9e34e5e569091166",
      "kind": "transparent"
    },
    {
      "address": "0x9d4454B023096f34B160D6B654540c56A1F81688",
      "txHash": "0x0e7773758e85bfdcae04d81c253127689804e65e35b843200a6a4ec9f4966dde",
      "kind": "transparent"
    },
    {
      "address": "0x809d550fca64d94Bd9F66E60752A544199cfAC3D",
      "txHash": "0x8609ab28faf85f849e2e0c2af55b52e47a96edd2f8d1320788a0e4e4c3e6c087",
      "kind": "transparent"
    },
    {
      "address": "0x4c5859f0F772848b2D91F1D83E2Fe57935348029",
      "txHash": "0x8972d93b453f988410f887ebc276f1a1d8238da31cd214eabc6f51ddf873bdf6",
      "kind": "transparent"
    },
    {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0x4641e86c83e8ae96ea7854a368097046817e6a34f23df23668b4f8460a087d0d",
      "kind": "transparent"
    },
    {
      "address": "0x172076E0166D1F9Cc711C77Adf8488051744980C",
      "txHash": "0xc4dff92eacb159f6a5716abb9f764a2053bfc5adca15c350a9bbac8c19169536",
      "kind": "transparent"
    },
    {
      "address": "0xCA8c8688914e0F7096c920146cd0Ad85cD7Ae8b9",
      "txHash": "0xfed27c5f058df9b1dc334f15bfeadce8249944a74ea618e813f1543274c34eed",
      "kind": "transparent"
    },
    {
      "address": "0xB0f05d25e41FbC2b52013099ED9616f1206Ae21B",
      "txHash": "0xabaebb11578a2c902bbf1fa82d52f2ebfa0b14d719d73b03b9759fec8413b9d2",
      "kind": "transparent"
    },
    {
      "address": "0x5FeaeBfB4439F3516c74939A9D04e95AFE82C4ae",
      "txHash": "0x3e00ea37e6dfed09c5c83e06e73778d7fdf9325416a5b92a00d9c852f1690b73",
      "kind": "transparent"
    },
    {
      "address": "0x976fcd02f7C4773dd89C309fBF55D5923B4c98a1",
      "txHash": "0x1aae0f3a33a00a49e91c11fd9a21c91ee4ac6b05522f2a8112cffcc2ee7279db",
      "kind": "transparent"
    },
    {
      "address": "0x19cEcCd6942ad38562Ee10bAfd44776ceB67e923",
      "txHash": "0xcedf332965c24e2a236736dc9a5601f09cc3f867ac6cade4f61408f15c1996b3",
      "kind": "transparent"
    },
    {
      "address": "0xD42912755319665397FF090fBB63B1a31aE87Cee",
      "txHash": "0x7ff6df70d648615fe4bd8751035ae39335bfd5c8272e9d04f315d18d12dee158",
      "kind": "transparent"
    },
    {
      "address": "0x927b167526bAbB9be047421db732C663a0b77B11",
      "txHash": "0xb6ac4667a4597e093baadf732de890c7c9ff271a5df67a43d00a1a7357511841",
      "kind": "transparent"
    },
    {
      "address": "0x32EEce76C2C2e8758584A83Ee2F522D4788feA0f",
      "txHash": "0x66d57e54a1b2026964f6a2e21648fecbad162d3117637eff6f1462893b00e3d7",
      "kind": "transparent"
    },
    {
      "address": "0x26B862f640357268Bd2d9E95bc81553a2Aa81D7E",
      "txHash": "0xd24f494b11a90ff7ce1475ff321047e46a9f4ddb6871fb7a19e90168b418eca7",
      "kind": "transparent"
    },
    {
      "address": "0xA56F946D6398Dd7d9D4D9B337Cf9E0F68982ca5B",
      "txHash": "0xe6d27efc5eaa8c2282af84b363d854a3bb16ea5d8f56c4717184c4043c48d98f",
      "kind": "transparent"
    },
    {
      "address": "0x5D42EBdBBa61412295D7b0302d6F50aC449Ddb4F",
      "txHash": "0x39f29bde0385329ff23ff8126d12ff9caf123140470e5fa382813ff13af878d8",
      "kind": "transparent"
    },
    {
      "address": "0xddE78e6202518FF4936b5302cC2891ec180E8bFf",
      "txHash": "0xfa8ec3d578ae74d57a72e2744370e8fb6ceaaaea6937f733b54416984e2060e6",
      "kind": "transparent"
    },
    {
      "address": "0xB06c856C8eaBd1d8321b687E188204C1018BC4E5",
      "txHash": "0xb0a600cd5992f016e52b76eb3c878969416d64affd0cfa7727267e5e41a07d88",
      "kind": "transparent"
    },
    {
      "address": "0xaB7B4c595d3cE8C85e16DA86630f2fc223B05057",
      "txHash": "0x3235d619dd9d3f365a60af621d7dd09d281be4e40a00cdcbdaf96e766cbb7058",
      "kind": "transparent"
    },
    {
      "address": "0x045857BDEAE7C1c7252d611eB24eB55564198b4C",
      "txHash": "0x106f25460f7523d7b34c000c7c32473317759a85c92e4a72f5c8943d3e2ea240",
      "kind": "transparent"
    },
    {
      "address": "0x2b5A4e5493d4a54E717057B127cf0C000C876f9B",
      "txHash": "0xbe1ea803e6c3f79a1d0c30c480ce1fefe074478e5458353ebf38ed29408dd455",
      "kind": "transparent"
    },
    {
      "address": "0x09635F643e140090A9A8Dcd712eD6285858ceBef",
      "txHash": "0xcc7ffdb2628aa036cc7852165de956d1370c8561b0108113d0c30967cea4b694",
      "kind": "transparent"
    },
    {
      "address": "0xc5a5C42992dECbae36851359345FE25997F5C42d",
      "txHash": "0x8c842ce6f604784844bdefbb1452a16dfbf680ed2f19918b349ac3b082a51a75",
      "kind": "transparent"
    },
    {
      "address": "0xc3e53F4d16Ae77Db1c982e75a937B9f60FE63690",
      "txHash": "0xe74ee0bdd8d2a36b7ecfb2ca242d1d4e62b85aaef1dce8ef2ce609e8adbfba8e",
      "kind": "transparent"
    },
    {
      "address": "0x95401dc811bb5740090279Ba06cfA8fcF6113778",
      "txHash": "0x6666ed908286126c403700115f1be16869153a998bea058ed4fec8fba7d9b2af",
      "kind": "transparent"
    },
    {
      "address": "0x998abeb3E57409262aE5b751f60747921B33613E",
      "txHash": "0xbf02a59367aaef943c580553947cf6e1e5ab11600ee45c4417626aa8c027dbd5",
      "kind": "transparent"
    },
    {
      "address": "0x70e0bA845a1A0F2DA3359C97E0285013525FFC49",
      "txHash": "0x0465c726ffdafe79c2c50dda3add35eddf4816f8e619ea9e3b5bfe50943bd9b7",
      "kind": "transparent"
    },
    {
      "address": "0x4826533B4897376654Bb4d4AD88B7faFD0C98528",
      "txHash": "0x212c247f590a2832330eaf8b4c7c5e67fdcf5942a40be95fb693bb426bcdb215",
      "kind": "transparent"
    },
    {
      "address": "0x99bbA657f2BbC93c02D617f8bA121cB8Fc104Acf",
      "txHash": "0x20fa3763ad38455d95dbd28a179b2d7357084d0ec10febac89500a4d2018ebe3",
      "kind": "transparent"
    },
    {
      "address": "0x0E801D84Fa97b50751Dbf25036d067dCf18858bF",
      "txHash": "0x96ac8e424cc829fe4f29c15a158cae044629d9778cee8abf02f09dbd30062f58",
      "kind": "transparent"
    },
    {
      "address": "0x5eb3Bc0a489C5A8288765d2336659EbCA68FCd00",
      "txHash": "0xdb407d03a336bffa2410f77987a3006588b2a773efcb9d4f88c0fd8d2744bdaa",
      "kind": "transparent"
    },
    {
      "address": "0x82e01223d51Eb87e16A03E24687EDF0F294da6f1",
      "txHash": "0xf811e095950a06cb311fa644dfbd3f4214dec27e06cb02514118ff014f204b06",
      "kind": "transparent"
    },
    {
      "address": "0x2bdCC0de6bE1f7D2ee689a0342D76F52E8EFABa3",
      "txHash": "0xa21b6a34023b1a8a6f9b6de84522036cc55ac8b7fe1ef4f0a673c3d3427b36bd",
      "kind": "transparent"
    },
    {
      "address": "0x7969c5eD335650692Bc04293B07F5BF2e7A673C0",
      "txHash": "0xfef7e60f18bb42599b6a147454dacbaee37248f9f226f26bf68e0485db72e3db",
      "kind": "transparent"
    },
    {
      "address": "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
      "txHash": "0x98761df0a801e369311089c6727ac92743a51b4e04bd85e05e3557b1c5867ac4",
      "kind": "transparent"
    },
    {
      "address": "0xc351628EB244ec633d5f21fBD6621e1a683B1181",
      "txHash": "0x84e93e40d7a154da0e363f2c2ea6bfb8c4804455f550b49cd95d217fec8399af",
      "kind": "transparent"
    },
    {
      "address": "0xFD471836031dc5108809D173A067e8486B9047A3",
      "txHash": "0xe3e7391f57a0850ab29b064dfef03d53962d0a262e7e378017ad6e7b5dd0c5ec",
      "kind": "transparent"
    },
    {
      "address": "0xB82008565FdC7e44609fA118A4a681E92581e680",
      "txHash": "0xec36ff8f0831c34a21f406187b6174e96f597fcb26b7d959b129ee501d0ba38b",
      "kind": "transparent"
    },
    {
      "address": "0x2a810409872AfC346F9B5b26571Fd6eC42EA4849",
      "txHash": "0x621fb0bd7646768dc7c58f83c2f765f18a406a0b54156838b34c3605f3913688",
      "kind": "transparent"
    },
    {
      "address": "0xb9bEECD1A582768711dE1EE7B0A1d582D9d72a6C",
      "txHash": "0x9d81be636f974c42e26e2556f4f123cf170bf3f498c13ae7c4732803afc8e834",
      "kind": "transparent"
    },
    {
      "address": "0x8A93d247134d91e0de6f96547cB0204e5BE8e5D8",
      "txHash": "0x0c2af78fb9f48f5f6489fb9f2e3f5e135d4f6f3a5aac5b5aff0c3750dffd8654",
      "kind": "transparent"
    },
    {
      "address": "0x40918Ba7f132E0aCba2CE4de4c4baF9BD2D7D849",
      "txHash": "0x48d734048b627ad78bd36771ce1f238953a29b514fb26ef84b527f29f0d9c533",
      "kind": "transparent"
    },
    {
      "address": "0xF32D39ff9f6Aa7a7A64d7a4F00a54826Ef791a55",
      "txHash": "0x00f6cb9bd8041c1e16ceae3a43d7d416403b9a42a4128b6ff41e1f0bbc7558fe",
      "kind": "transparent"
    },
    {
      "address": "0xd6e1afe5cA8D00A2EFC01B89997abE2De47fdfAf",
      "txHash": "0x44682bd1f6c19ca93c250cdf202221cc5b4d691bebac534c89341a18f9a1741b",
      "kind": "transparent"
    },
    {
      "address": "0x6F6f570F45833E249e27022648a26F4076F48f78",
      "txHash": "0x0b413266a9ffc5a2f1ea9ba7d84fbcb9b1871d24cba0f878e301f92b7dcc8a7f",
      "kind": "transparent"
    },
    {
      "address": "0xc582Bc0317dbb0908203541971a358c44b1F3766",
      "txHash": "0xd6199bfc320e4c76ce2fe900b60756b515653969510012ab1bddae48eb74d780",
      "kind": "transparent"
    },
    {
      "address": "0xB2b580ce436E6F77A5713D80887e14788Ef49c9A",
      "txHash": "0x916fa423ded01c16c4ec41295422575b5b498c401428f240bae6f391c1052f50",
      "kind": "transparent"
    },
    {
      "address": "0xB377a2EeD7566Ac9fCb0BA673604F9BF875e2Bab",
      "txHash": "0xb9dfcd29a915b09a696727407d46326bb45190b6236df80d2cfba239c7781379",
      "kind": "transparent"
    },
    {
      "address": "0x66F625B8c4c635af8b74ECe2d7eD0D58b4af3C3d",
      "txHash": "0xae531d37cf97abcbf4ff50ed07d6418098f59119b911073f2d006a62fd7f012f",
      "kind": "transparent"
    },
    {
      "address": "0x8bCe54ff8aB45CB075b044AE117b8fD91F9351aB",
      "txHash": "0x68195d89cf8b7c7562e5ac82aae7d0169e59a56f89359d3f9b156955cc8da708",
      "kind": "transparent"
    },
    {
      "address": "0x74Cf9087AD26D541930BaC724B7ab21bA8F00a27",
      "txHash": "0x00766d7f0a8a9863174cc88fea295e7c25e8da6c6d158cf82f7816f10785da72",
      "kind": "transparent"
    },
    {
      "address": "0xefAB0Beb0A557E452b398035eA964948c750b2Fd",
      "txHash": "0x6c574db92d58839fbeb36879e1a838c5da577a2f4adb7afb1aebe65b3fc3ac23",
      "kind": "transparent"
    },
    {
      "address": "0x70bDA08DBe07363968e9EE53d899dFE48560605B",
      "txHash": "0x59b838cc9538962536811bbbd5050b74b1307de235bb95d2732cf5ff9e15338d",
      "kind": "transparent"
    },
    {
      "address": "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      "txHash": "0xadc179be965ea538deff4102c6cbcb602a1ce88de29cf1ae7ef7b90d07878bdd",
      "kind": "transparent"
    },
    {
      "address": "0xDC11f7E700A4c898AE5CAddB1082cFfa76512aDD",
      "txHash": "0x36c8fe0aa28e12f9f0060a2428b3dd652b4b7ac8b2624df90c8c871a222e6c33",
      "kind": "transparent"
    },
    {
      "address": "0x51A1ceB83B83F1985a81C295d1fF28Afef186E02",
      "txHash": "0x5c7aab2b8b5f6bcb8fa3952f0f5dc853bb7cc0ea32b9550d7531e0b86dc15c2f",
      "kind": "transparent"
    },
    {
      "address": "0x36b58F5C1969B7b6591D752ea6F5486D069010AB",
      "txHash": "0xeedb91d3a93195e1b4afa8c8d29e2a57ef6d0d7bb52caef976e4827d2a030c80",
      "kind": "transparent"
    },
    {
      "address": "0x8198f5d8F8CfFE8f9C413d98a0A55aEB8ab9FbB7",
      "txHash": "0x767d1b9305d600d2aa75b097111ebb385268d5dd9265024144ceb7e887066141",
      "kind": "transparent"
    },
    {
      "address": "0x0355B7B8cb128fA5692729Ab3AAa199C1753f726",
      "txHash": "0x5cb581130786e82e75518d6a1dd2c061b64ebfb999ed5c59aa14a2db7e8c7c1d",
      "kind": "transparent"
    },
    {
      "address": "0x202CCe504e04bEd6fC0521238dDf04Bc9E8E15aB",
      "txHash": "0xab92c85d6da6a1cc190d9b7a45dc5645c1e176a6293798d152893e7e1570e428",
      "kind": "transparent"
    },
    {
      "address": "0xf4B146FbA71F41E0592668ffbF264F1D186b2Ca8",
      "txHash": "0x195b14d1a95912a2ba65fbe1fde5eabc836c4fa994ff705f865d12ff9e0a4d31",
      "kind": "transparent"
    },
    {
      "address": "0x4EE6eCAD1c2Dae9f525404De8555724e3c35d07B",
      "txHash": "0x00b0c5dfd8810ac06ddfb880573472bbaeb2aa94877d8ee136958f741c558ef6",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xd5b5ebcd01852b362226b67bd1ed0e623edf9480e46b27cbd3600f8244212960",
      "kind": "transparent"
    },
    {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0x9bf31a41dbc697527b824c3f11f195bbc48ffbdbbbd595a5bf3ed4fd19cfdd95",
      "kind": "transparent"
    },
    {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0x9eea4bcd664eae659c4c32ed979e1b3832cd58d3f7bbf27f8ac7cdeae89e2888",
      "kind": "transparent"
    },
    {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0xece95dbc97dbaedabe80a8d7a4be9b07f80b9d5ea7e1431f0a371416f86fbacd",
      "kind": "transparent"
    },
    {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0x8bd31dfbb6f9ef066123d0176e33bc68ed737d14a163498b7596eebdecfc4f15",
      "kind": "transparent"
    },
    {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0xb28f73ceaffa12839ceed93dd2f062a3d6e19b757cfb191befc06d0a0170ccda",
      "kind": "transparent"
    },
    {
      "address": "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      "txHash": "0x760f0c8d24d3f949e6edabbe002f7ce05c80093d55f2a2855c31f601772a5057",
      "kind": "transparent"
    },
    {
      "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
      "txHash": "0x47500200f44617471286aed8d70e201e8c9e4388ad78bea50ec201c1b0655507",
      "kind": "transparent"
    },
    {
      "address": "0x4A679253410272dd5232B3Ff7cF5dbB88f295319",
      "txHash": "0x668b3c08bbf854b1fec5bf0c9c5352d2ee58cbb6d98241568a268d88e02965fe",
      "kind": "transparent"
    },
    {
      "address": "0x7a2088a1bFc9d81c55368AE168C2C02570cB814F",
      "txHash": "0xfd1e43c68274d22ea5c5f23d24a63d838729199e153da100e252898de63a919a",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x3979fb328b7c488342ba4cbe9d02f1bdbd64af6b3e9a83699ca0f45a6a7189b0",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0xf2e43473eac41070a150391834cfce0dee60586e96c75f7dd577d639769834e6",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xa445a602a17edcac0553257fbcb18001b3f063bdc5b1817a8c12b473ad812598",
      "kind": "transparent"
    },
    {
      "address": "0x610178dA211FEF7D417bC0e6FeD39F05609AD788",
      "txHash": "0xe8c92c5ff6a7fa3bfb5d51abe28a018c9b7087357d5522eb31ddc5a0251fb315",
      "kind": "transparent"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0x7e41dcd9eba7eae526711f8e0e6169a24c7f46fe2b4cd15e45eb539a86fec41b",
      "kind": "transparent"
    },
    {
      "address": "0x1429859428C0aBc9C2C47C8Ee9FBaf82cFA0F20f",
      "txHash": "0x0ae2a6893b8706691ce52f7c0950b846441ab70dfefa5c6e9a530d472894530b",
      "kind": "transparent"
    },
    {
      "address": "0xB0D4afd8879eD9F52b28595d31B441D079B2Ca07",
      "txHash": "0xa7d61aa8dd67b539c4159bdbd285a7f82db627a9368379a86899bd8a14d5e369",
      "kind": "transparent"
    },
    {
      "address": "0x162A433068F51e18b7d13932F27e66a3f99E6890",
      "txHash": "0x358fc1851aaca3a88c4bdab8957d9092dbf9df73c9bdfce263e5e41c5309a35a",
      "kind": "transparent"
    },
    {
      "address": "0x922D6956C99E12DFeB3224DEA977D0939758A1Fe",
      "txHash": "0x655c69680c2b2218d33f823ea673ff7aaacb4c2a360458963f7be26e28cc1afe",
      "kind": "transparent"
    },
    {
      "address": "0x5081a39b8A5f0E35a8D959395a630b68B74Dd30f",
      "txHash": "0xec64f7280ac1d17e2ba971e1cb293d3ff35fb559fe97936380d396d1bcdef538",
      "kind": "transparent"
    }
  ],
  "impls": {
    "3c278152d5f0b6ac67cf178a60afa6669091c27bfa124fbd06d7cc6bb2d5e924": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x238635267a521381e7dfc000b56ec2cc080be39dd600045dbb1b06afd37ac4ff",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_timestamps",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "TimelockControllerUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\TimelockControllerUpgradeable.sol:40"
          },
          {
            "label": "_minDelay",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "TimelockControllerUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\TimelockControllerUpgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "TimelockControllerUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\TimelockControllerUpgradeable.sol:531"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bdd359232ce4427910d5c07d43db4226c3265152631e8d13aa4f5f7115cbeed1": {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0x55241efee1348b228a2dbb99cd0c8f3a2743230f8248a903cfad0f1d3d530468",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "101",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "102",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IChancelorUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\IChancelorUpgradeable.sol:360"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IChancelorTimelockUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\extensions\\IChancelorTimelockUpgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "IChancelorCompatibilityBravoUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\compatibility\\IChancelorCompatibilityBravoUpgradeable.sol:135"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "303",
            "type": "t_string_storage",
            "contract": "ChancelorUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\ChancelorUpgradeable.sol:65"
          },
          {
            "label": "_proposals",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)5687_storage)",
            "contract": "ChancelorUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\ChancelorUpgradeable.sol:67"
          },
          {
            "label": "_chancelorCall",
            "offset": 0,
            "slot": "305",
            "type": "t_struct(Bytes32Deque)4627_storage",
            "contract": "ChancelorUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\ChancelorUpgradeable.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ChancelorUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\ChancelorUpgradeable.sol:794"
          },
          {
            "label": "_votingDelay",
            "offset": 0,
            "slot": "353",
            "type": "t_uint256",
            "contract": "ChancelorSettingsUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\extensions\\ChancelorSettingsUpgradeable.sol:18"
          },
          {
            "label": "_votingPeriod",
            "offset": 0,
            "slot": "354",
            "type": "t_uint256",
            "contract": "ChancelorSettingsUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\extensions\\ChancelorSettingsUpgradeable.sol:19"
          },
          {
            "label": "_proposalThreshold",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ChancelorSettingsUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\extensions\\ChancelorSettingsUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ChancelorSettingsUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\extensions\\ChancelorSettingsUpgradeable.sol:163"
          },
          {
            "label": "_proposalDetails",
            "offset": 0,
            "slot": "403",
            "type": "t_mapping(t_uint256,t_struct(ProposalDetails)8411_storage)",
            "contract": "ChancelorCompatibilityBravoUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\compatibility\\ChancelorCompatibilityBravoUpgradeable.sol:54"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ChancelorCompatibilityBravoUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\compatibility\\ChancelorCompatibilityBravoUpgradeable.sol:376"
          },
          {
            "label": "tokens",
            "offset": 0,
            "slot": "453",
            "type": "t_struct(AddressSet)5261_storage",
            "contract": "SenateVotesUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\extensions\\SenateVotesUpgradeable.sol:29"
          },
          {
            "label": "tokensUpgradeable",
            "offset": 0,
            "slot": "455",
            "type": "t_struct(AddressSet)5261_storage",
            "contract": "SenateVotesUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\extensions\\SenateVotesUpgradeable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "457",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SenateVotesUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\extensions\\SenateVotesUpgradeable.sol:107"
          },
          {
            "label": "_quorumNumerator",
            "offset": 0,
            "slot": "507",
            "type": "t_uint256",
            "contract": "SenateVotesQuorumFractionUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\extensions\\SenateVotesQuorumFractionUpgradeable.sol:25"
          },
          {
            "label": "_quorumNumeratorHistory",
            "offset": 0,
            "slot": "508",
            "type": "t_struct(History)958_storage",
            "contract": "SenateVotesQuorumFractionUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\extensions\\SenateVotesQuorumFractionUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "509",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SenateVotesQuorumFractionUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\extensions\\SenateVotesQuorumFractionUpgradeable.sol:184"
          },
          {
            "label": "_timelock",
            "offset": 0,
            "slot": "557",
            "type": "t_contract(TimelockControllerUpgradeable)8351",
            "contract": "ChancelorTimelockControlUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\extensions\\ChancelorTimelockControlUpgradeable.sol:32"
          },
          {
            "label": "_timelockIds",
            "offset": 0,
            "slot": "558",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "ChancelorTimelockControlUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\extensions\\ChancelorTimelockControlUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "559",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ChancelorTimelockControlUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\extensions\\ChancelorTimelockControlUpgradeable.sol:243"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Checkpoint)953_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(TimelockControllerUpgradeable)8351": {
            "label": "contract TimelockControllerUpgradeable",
            "numberOfBytes": "20"
          },
          "t_int128": {
            "label": "int128",
            "numberOfBytes": "16"
          },
          "t_mapping(t_address,t_struct(Receipt)9211_storage)": {
            "label": "mapping(address => struct IChancelorCompatibilityBravoUpgradeable.Receipt)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_int128,t_bytes32)": {
            "label": "mapping(int128 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)5687_storage)": {
            "label": "mapping(uint256 => struct ChancelorUpgradeable.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalDetails)8411_storage)": {
            "label": "mapping(uint256 => struct ChancelorCompatibilityBravoUpgradeable.ProposalDetails)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)5261_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4960_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(BlockNumber)1556_storage": {
            "label": "struct TimersUpgradeable.BlockNumber",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Deque)4627_storage": {
            "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_int128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_end",
                "type": "t_int128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_int128,t_bytes32)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Checkpoint)953_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)958_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)953_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)5687_storage": {
            "label": "struct ChancelorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "voteStart",
                "type": "t_struct(BlockNumber)1556_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteEnd",
                "type": "t_struct(BlockNumber)1556_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "canceled",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(ProposalDetails)8411_storage": {
            "label": "struct ChancelorCompatibilityBravoUpgradeable.ProposalDetails",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "signatures",
                "type": "t_array(t_string_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)9211_storage)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Receipt)9211_storage": {
            "label": "struct IChancelorCompatibilityBravoUpgradeable.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "support",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "votes",
                "type": "t_uint96",
                "offset": 2,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Set)4960_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "db8c56ad752effc36e647930692a1ceb0704a0a34a7933639a9ea81c9262e2c4": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xe87bc6560ea9b1e4a420d7a76e712bbf6f85536c10b851f936cec1d36a73a93b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "senate",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(ISenateUpgradeable)17336",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:56"
          },
          {
            "label": "_delegation",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_address)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:61"
          },
          {
            "label": "_delegateCheckpoints",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_struct(History)2636_storage)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:62"
          },
          {
            "label": "_totalCheckpoints",
            "offset": 0,
            "slot": "356",
            "type": "t_struct(History)2636_storage",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:64"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_struct(Counter)4042_storage)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:66"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "358",
            "type": "t_array(t_uint256)46_storage",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:286"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Token\\ERC721\\extensions\\ERC721SenatorVotesUpgradeable.sol:73"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(Counter)4042_storage",
            "contract": "Token2",
            "src": "contracts\\ERC721SenatorTokensUpg\\Token2.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)2641_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISenateUpgradeable)17336": {
            "label": "contract ISenateUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)4042_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(History)2636_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.History)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)2641_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4042_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)2636_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)2641_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f194815d9edc94298f9bd3a80fce935076cc82bb0735c2dd958eaec0b1a25e66": {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x61ba2f7fecd6438cd25fb3a39e25425a9c56cda78e04e0f91eabfa8e033e4bb2",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "senate",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(ISenateUpgradeable)17336",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:56"
          },
          {
            "label": "_delegation",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_address)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:61"
          },
          {
            "label": "_delegateCheckpoints",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_struct(History)2636_storage)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:62"
          },
          {
            "label": "_totalCheckpoints",
            "offset": 0,
            "slot": "356",
            "type": "t_struct(History)2636_storage",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:64"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_struct(Counter)4042_storage)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:66"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "358",
            "type": "t_array(t_uint256)46_storage",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:286"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Token\\ERC721\\extensions\\ERC721SenatorVotesUpgradeable.sol:73"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(Counter)4042_storage",
            "contract": "Token3",
            "src": "contracts\\ERC721SenatorTokensUpg\\Token3.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)2641_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISenateUpgradeable)17336": {
            "label": "contract ISenateUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)4042_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(History)2636_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.History)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)2641_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4042_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)2636_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)2641_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8e9f87b10b302f6e64a8cb017c287f315bed53ee80de3d579aa61ec698507e43": {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0xc6a4c7336f8997f3c3630c92d8692d152b12ba8430f927a38fc258d7d180b866",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "senate",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(ISenateUpgradeable)16202",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\utils\\SenatorVotesUpgradeable.sol:56"
          },
          {
            "label": "_delegation",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_address)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\utils\\SenatorVotesUpgradeable.sol:61"
          },
          {
            "label": "_delegateCheckpoints",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_struct(History)2636_storage)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\utils\\SenatorVotesUpgradeable.sol:62"
          },
          {
            "label": "_totalCheckpoints",
            "offset": 0,
            "slot": "356",
            "type": "t_struct(History)2636_storage",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\utils\\SenatorVotesUpgradeable.sol:64"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_struct(Counter)4042_storage)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\utils\\SenatorVotesUpgradeable.sol:66"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "358",
            "type": "t_array(t_uint256)46_storage",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Governance\\utils\\SenatorVotesUpgradeable.sol:286"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721SenatorVotesUpgradeable",
            "src": "@royaldao\\royaldao-contract-upgradeable\\contracts\\Token\\ERC721\\extensions\\ERC721SenatorVotesUpgradeable.sol:73"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(Counter)4042_storage",
            "contract": "Token6",
            "src": "contracts\\Token6.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)2641_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISenateUpgradeable)16202": {
            "label": "contract ISenateUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)4042_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(History)2636_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.History)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)2641_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4042_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)2636_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)2641_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "679c9420eccc73ff28802957a670f18dbbc0f8a155a2d780832f6761346a1a00": {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xecdd39e63bc8df00b2bf7171065370710fc041e868cfd5a07ceb94c5d40961ac",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "senate",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(ISenateUpgradeable)17336",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:56"
          },
          {
            "label": "_delegation",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_address)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:61"
          },
          {
            "label": "_delegateCheckpoints",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_struct(History)2636_storage)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:62"
          },
          {
            "label": "_totalCheckpoints",
            "offset": 0,
            "slot": "356",
            "type": "t_struct(History)2636_storage",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:64"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_struct(Counter)4042_storage)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:66"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "358",
            "type": "t_array(t_uint256)46_storage",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:286"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Token\\ERC721\\extensions\\ERC721SenatorVotesUpgradeable.sol:73"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(Counter)4042_storage",
            "contract": "Token1",
            "src": "contracts\\ERC721SenatorTokensUpg\\Token1.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)2641_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISenateUpgradeable)17336": {
            "label": "contract ISenateUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)4042_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(History)2636_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.History)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)2641_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4042_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)2636_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)2641_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "03225d7cb3290b263b670744663c9c9c5d2cbe4ad74d636c66804476c1645525": {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0xc6082590bff41aebbdacbfb4c6a408654c348ca01739f6f1dc8e667b62a57b91",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "senate",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(ISenateUpgradeable)17336",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:56"
          },
          {
            "label": "_delegation",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_address)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:61"
          },
          {
            "label": "_delegateCheckpoints",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_struct(History)2636_storage)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:62"
          },
          {
            "label": "_totalCheckpoints",
            "offset": 0,
            "slot": "356",
            "type": "t_struct(History)2636_storage",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:64"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_struct(Counter)4042_storage)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:66"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "358",
            "type": "t_array(t_uint256)46_storage",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:286"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Token\\ERC721\\extensions\\ERC721SenatorVotesUpgradeable.sol:73"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(Counter)4042_storage",
            "contract": "Token4",
            "src": "contracts\\ERC721SenatorTokensUpg\\Token4.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)2641_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISenateUpgradeable)17336": {
            "label": "contract ISenateUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)4042_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(History)2636_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.History)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)2641_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4042_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)2636_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)2641_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8a01011a6587797abb757df73f03622d6a792676a909c10e34cf0b42a697c38d": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x9a95bcae02a4cf7e777205b99ada72ae627ed9349fa9e24c80d7f4d5d748b06a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "301",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "302",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "303",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "senate",
            "offset": 0,
            "slot": "353",
            "type": "t_contract(ISenateUpgradeable)17336",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:56"
          },
          {
            "label": "_delegation",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_address,t_address)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:61"
          },
          {
            "label": "_delegateCheckpoints",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_address,t_struct(History)2636_storage)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:62"
          },
          {
            "label": "_totalCheckpoints",
            "offset": 0,
            "slot": "356",
            "type": "t_struct(History)2636_storage",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:64"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_address,t_struct(Counter)4042_storage)",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:66"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "358",
            "type": "t_array(t_uint256)46_storage",
            "contract": "SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Governance\\utils\\SenatorVotesUpgradeable.sol:286"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721SenatorVotesUpgradeable",
            "src": "@royaldao\\contracts-upgradeable\\Token\\ERC721\\extensions\\ERC721SenatorVotesUpgradeable.sol:73"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "454",
            "type": "t_struct(Counter)4042_storage",
            "contract": "Token5",
            "src": "contracts\\ERC721SenatorTokensUpg\\Token5.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint)2641_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ISenateUpgradeable)17336": {
            "label": "contract ISenateUpgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)4042_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(History)2636_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.History)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint)2641_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4042_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(History)2636_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)2641_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
